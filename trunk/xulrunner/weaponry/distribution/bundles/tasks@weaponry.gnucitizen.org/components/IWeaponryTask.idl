/**
 *  IWeaponryTask.idl
 *  Copyright (C) 2007-2011  GNUCITIZEN
 *  
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include "nsISupports.idl"

/* ------------------------------------------------------------------------ */

interface IWeaponryTaskHolder;
interface IWeaponryTaskCallbackHandler;
interface IWeaponryTaskCompletionCallbackHandler;
interface IWeaponryTaskPrototype;
interface IWeaponryTask;

/* ------------------------------------------------------------------------ */

[scriptable, uuid(a09bde30-0b46-11df-8a39-0800200c9a66)]
interface IWeaponryTaskHolder : nsISupports {
	IWeaponryTask getTask();
	
	void setTask(in IWeaponryTask task);
	
	void unsetTask(in IWeaponryTask task);
};

/* ------------------------------------------------------------------------ */

[scriptable, function, uuid(837c7610-05ac-11df-8a39-0800200c9a66)]
interface IWeaponryTaskCallbackHandler : nsISupports {
	void handle(in IWeaponryTask task);
};

/* ------------------------------------------------------------------------ */

[scriptable, function, uuid(c9c73710-2ec7-11df-9aae-0800200c9a66)]
interface IWeaponryTaskCompletionCallbackHandler : nsISupports {
	void handle();
};

/* ------------------------------------------------------------------------ */

[scriptable, uuid(2133a600-055b-11df-8a39-0800200c9a66)]
interface IWeaponryTaskPrototype : nsISupports {
	readonly attribute AString name;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute AString type;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute AString title;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute AString status;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute short progress;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute AString thumbnailUri;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute boolean isActable;
	
	readonly attribute boolean isStoppable;
	
	readonly attribute boolean isPausable;
	
	readonly attribute boolean isAutodestroyable;
	
	readonly attribute boolean isInstantiated;
	
	readonly attribute boolean isCreated;
	
	readonly attribute boolean isRunning;
	
	readonly attribute boolean isStopped;
	
	readonly attribute boolean isPaused;
	
	readonly attribute boolean isFinished;
	
	readonly attribute boolean isDestroyed;
	
	/* -------------------------------------------------------------------- */
	
	void setup([optional] in AString options);
	
	void act();
	
	void start();
	
	void stop();
	
	void pause();
	
	void resume();
};

/* ------------------------------------------------------------------------ */

[scriptable, uuid(67ab1350-0558-11df-8a39-0800200c9a66)]
interface IWeaponryTask : IWeaponryTaskPrototype {
	[optional] readonly attribute IWeaponryTaskPrototype taskPrototype;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute AString id;
	
	/* -------------------------------------------------------------------- */
	
	readonly attribute AString state;
	
	/* -------------------------------------------------------------------- */
	
	void initWithPrototype(in IWeaponryTaskPrototype prototype);
	
	/* -------------------------------------------------------------------- */
	
	void create();
	
	void destroy();
	
	/* -------------------------------------------------------------------- */
	
	boolean sameAs(in IWeaponryTask task);
	
	/* -------------------------------------------------------------------- */
	
	void update();
	
	void finish();
};

/*  GNUCITIZEN (Information Security Think Tank)
 **********************************************/