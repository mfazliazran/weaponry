<?xml version="1.0"?>
<!--
 *  informationbox.xml
 *  Copyright (C) 2007-2011  GNUCITIZEN
 *  
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->
<!DOCTYPE bindings SYSTEM "chrome://org.gnucitizen.weaponry.common/locale/xbl/informationbox.dtd">
<bindings
	xmlns="http://www.mozilla.org/xbl"
	xmlns:cmn="http://www.gnucitizen.org/cmn"
	xmlns:xbl="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	
	<binding id="informationbox" extends="chrome://org.gnucitizen.weaponry.common/content/xbl/basebox.xml#basebox">
		<content>
			<xul:vbox class="informationbox-container" flex="1" cmn:exposed="$container">
				<xul:notificationbox class="informationbox-notificationbox" flex="1" cmn:exposed="$notificationbox">
					<children/>
				</xul:notificationbox>
			</xul:vbox>
		</content>
		
		<implementation>
			<method name="_getPriority">
				<parameter name="priority"/>
				
				<body><![CDATA[
					switch (priority.toLowerCase()) {
						case 'low':
							return this.$notificationbox.PRIORITY_INFO_LOW;
						case 'medium':
							return this.$notificationbox.PRIORITY_WARNING_LOW;
						case 'high':
							return this.$notificationbox.PRIORITY_CRITICAL_LOW;
						case 'info':
							return this.$notificationbox.PRIORITY_INFO_LOW;
						case 'warning':
							return this.$notificationbox.PRIORITY_WARNING_LOW;
						case 'critical':
							return this.$notificationbox.PRIORITY_CRITICAL_LOW;
						case 'info_low':
							return this.$notificationbox.PRIORITY_INFO_LOW;
						case 'info_medium':
							return this.$notificationbox.PRIORITY_INFO_MEDIUM;
						case 'info_heigh':
							return this.$notificationbox.PRIORITY_INFO_HIGH;
						case 'warning_low':
							return this.$notificationbox.PRIORITY_WARNING_LOW;
						case 'warning_medium':
							return this.$notificationbox.PRIORITY_WARNING_MEDIUM;
						case 'warning_heigh':
							return this.$notificationbox.PRIORITY_WARNING_HIGH;
						case 'critical_low':
							return this.$notificationbox.PRIORITY_CRITICAL_LOW;
						case 'critical_medium':
							return this.$notificationbox.PRIORITY_CRITICAL_MEDIUM;
						case 'critical_heigh':
							return this.$notificationbox.PRIORITY_CRITICAL_HIGH;
						case 'critical_block':
							return this.$notificationbox.PRIORITY_CRITICAL_BLOCK;
						default:
							return null;
					}
				]]></body>
			</method>
			
			<method name="displayNotification">
				<parameter name="label"/>
				<parameter name="priority"/>
				
				<body><![CDATA[
					this.$notificationbox.appendNotification(label, null, null, this._getPriority(priority));
				]]></body>
			</method>
			
			<method name="removeAllNotifications">
				<body><![CDATA[
					this.$notificationbox.removeAllNotifications.apply(this.$notificationbox, arguments);
				]]></body>
			</method>
		</implementation>
	</binding>
	
</bindings>
<!--
 *  GNUCITIZEN (Information Security Think Tank)
 ***********************************************
-->