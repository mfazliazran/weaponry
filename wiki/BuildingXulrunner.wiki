#summary This page describes how to build xulrunner from source.

http://weaponry.googlecode.com/svn/wiki/weaponry.png

= Introduction =

This page describes how to build xulrunner from source.

= Obtaining the Source =

Before you even start thinking about building you need to get the xulrunner/mozilla source. There are several ways you can do that. First, you can simply visit http://developer.mozilla.org/en/XULRunner and get it from there. You can also use Mercurial to get the latest development trunk.

If you plan to use Mercurial you will need the Mercurial client (i.e. {{{hg}}}) first.

  * Mercurial on Windows
  The simplest way to get Mercurial is to download and install the [http://ftp.mozilla.org/pub/mozilla.org/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe Mozilla Build], which you will need anyway if you plan to build on Windows.

  * Mercurial on Mac OS
  The simplest way to get Mercurial is to install the [http://www.macports.org/ Mac Ports] and get it with the port command (i.e. {{{sudo port install mercurial +universal}}}).

  * Mercurial on Linux
  Mercurial is pretty much native on Linux. Get it via whichever package manager you use (i.e. {{{apt-get install mercurial}}}).

Once you have Mercurial all you need to do is to get the latest source (i.e. {{{hg clone http://hg.mozilla.org/releases/mozilla-1.9.2/ mozilla-1.9.2}}}).

= Building on Mac OS X (Snow Leopard) =

First we need the following requirements:

 * [http://developer.apple.com/technologies/tools/xcode.html XCode] (comes with your Mac's dvd)
 * [http://www.macports.org/ Mac Ports]

From the Mac Ports you need gmake, coreutils, libidl and autoconfg213. This is how you install them:

{{{
sudo port install gmake +universal
sudo port install coreutils +universal
sudo port install libidl +universal
sudo port install autoconf213 +universal
}}}

Put the mozilla source at a convenient place and change your working directory to it.

== Building Debug Version ==

You need to create a file called .mozconfig inside the mozilla source with the following content:

{{{
mk_add_options MOZ_CO_PROJECT=xulrunner
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-xul-dbg
mk_add_options MOZ_MAKE_FLAGS="-s -j4"

ac_add_options --enable-debug
ac_add_options --disable-optimize
ac_add_options --disable-crashreporter
ac_add_options --disable-installer
ac_add_options --enable-application=xulrunner
ac_add_options --with-macos-sdk=/Developer/SDKs/MacOSX10.5.sdk
ac_add_options --target=i386-apple-darwin8.0.0
ac_add_options --enable-macos-target=10.5

#CC="gcc-4.0 -arch i386"
#CXX="g++-4.0 -arch i386"
CC="gcc-4.2 -arch i386"
CXX="g++-4.2 -arch i386"

#HOST_CC="gcc-4.0"
#HOST_CXX="g++-4.0"
HOST_CC="gcc-4.2"
HOST_CXX="g++-4.2"

RANLIB=ranlib
AR=ar
AS=$CC
LD=ld
STRIP="strip -x -S"
CROSS_COMPILE=1
}}}

Run {{{./configure}}} and start the build process by executing {{{make -f client.mk build}}}

Once the build is finished check obj-xul-dbg/dist/XUL.framework for the XUL.framework.

== Building Release Version ==

Nothing changes except the .mozconfig file which should look something similar to the following:

{{{
mk_add_options MOZ_CO_PROJECT=xulrunner
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-xul-res
mk_add_options MOZ_MAKE_FLAGS="-s -j4"

#ac_add_options --enable-debug
#ac_add_options --disable-optimize
ac_add_options --disable-crashreporter
ac_add_options --disable-installer
ac_add_options --enable-application=xulrunner
ac_add_options --with-macos-sdk=/Developer/SDKs/MacOSX10.5.sdk
ac_add_options --target=i386-apple-darwin8.0.0
ac_add_options --enable-macos-target=10.5

#CC="gcc-4.0 -arch i386"
#CXX="g++-4.0 -arch i386"
CC="gcc-4.2 -arch i386"
CXX="g++-4.2 -arch i386"

#HOST_CC="gcc-4.0"
#HOST_CXX="g++-4.0"
HOST_CC="gcc-4.2"
HOST_CXX="g++-4.2"

RANLIB=ranlib
AR=ar
AS=$CC
LD=ld
STRIP="strip -x -S"
CROSS_COMPILE=1
}}}

The only change is that the following two lines are disabled:

{{{
#ac_add_options --enable-debug
#ac_add_options --disable-optimize
}}}

= Building on Windows (XP) =

First we need the following requirements:

 * [http://www.microsoft.com/express/Downloads/#2008-Visual-CPP Microsoft Visual Studio] (Express editions are ok to use)
 * [http://www.microsoft.com/downloads/details.aspx?FamilyID=c17ba869-9671-4330-a63e-1fd44e0e2505&displaylang=en Microsoft Windows 7 SDK]
 * [http://www.microsoft.com/downloads/details.aspx?familyid=a55b6b43-e24f-4ea3-a93e-40c0ec4f68e5&displaylang=en Microsoft  Windows 2003 SDK]
 * [http://ftp.mozilla.org/pub/mozilla.org/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe Mozilla Build]
 * [http://java.sun.com/javase/downloads/widget/jdk6.jsp Java Development Kit]

Install all dependencies using the settings that come by default.

Fire up the build environment by simply opening cmd.exe, going to c:\mozilla-build\ and executing any of the following scripts depending on which version of Visual Studio you have: start-msvc6.bat, start-msvc71.bat, start-msvc8.bat or start-msvc9.bat. If you use VS 2008 Express you need msvc9.bat.

== Building Debug Version ==

As usual, you need to create a file called .mozconfig inside the mozilla source with the following content:

{{{
mk_add_options MOZ_CO_PROJECT=xulrunner
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-xul-dbg
mk_add_options MOZ_MAKE_FLAGS="-s -j4"

ac_add_options --enable-debug
ac_add_options --disable-optimize
ac_add_options --disable-crashreporter
ac_add_options --disable-installer
ac_add_options --enable-application=xulrunner
}}}

Start the build process by running: {{{make -f client.mk build}}}

Once the build is finished check obj-xul-dbg/dist/

== Building Release Version ==

Nothing changes except the .mozconfig file which should look something similar to the following:

{{{
mk_add_options MOZ_CO_PROJECT=xulrunner
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-xul-dbg
mk_add_options MOZ_MAKE_FLAGS="-s -j4"

#ac_add_options --enable-debug
#ac_add_options --disable-optimize
#ac_add_options --disable-crashreporter
ac_add_options --disable-installer
ac_add_options --enable-application=xulrunner
}}}

The only change is that the following three lines are disabled:

{{{
#ac_add_options --enable-debug
#ac_add_options --disable-optimize
#ac_add_options --disable-crashreporter
}}}

= Building on Linux (Ubuntu) =